sudo: true
dist: trusty
# services:
#   - docker

cache: 
  apt: true
  ccache: true
  packages: true
  directories:
    - $HOME/.ccache
    - $HOME/.m2

language: r

env:
  global:
    - STAN_BRANCH=master
    - STAN_MATH_BRANCH=master
    - MAKEFLAGS="-j 2"

matrix:
  include:
    - os: osx
      osx_image: xcode9.4
      env:
        - CC=clang
        - CXX=clang++
        
    # - os: osx
    #   osx_image: xcode9.4
    #   env:
    #     - MATRIX_EVAL="brew cask uninstall oclint && brew install gcc@8; xcode-select --install; CC=gcc-7 ; CXX=g++-7 "
        
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
            # - gcc-8 
            # - g++-8
           
      env:
        # - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"


before_install:
  - eval "${MATRIX_EVAL}"
  - echo -e "#\x21/bin/sh\n\$1 &\nPROCESS=\"\$!\"\nwhile :\ndo\n  RESULT=\`ps -p \${PROCESS} -o comm=\`" > wait4.sh
  - echo -e "  if [ -z \"\${RESULT}\" ]; then\n    wait \${PROCESS}; exit \$?\n  else\n    echo \"-\"; sleep 10\n  fi\ndone\nexit \$?" >> wait4.sh
  # - more wait4.sh
  - echo -e "Package\x3A mnb_bnm" > DESCRIPTION
  - chmod 755 wait4.sh
  

before_script: 
  - Rscript -e "install.packages(c('loo', 'inline', 'Rcpp', 'coda', 'BH', 'RcppEigen', 'RInside', 'RUnit', 'ggplot2', 'gridExtra', 'knitr', 'rmarkdown', 'pkgbuild'), repos='http://cran.rstudio.com')"
  - git config -f .gitmodules submodule.stan.branch ${STAN_BRANCH} 
  - git config -f .gitmodules submodule.StanHeaders/inst/include/mathlib.branch ${STAN_MATH_BRANCH}
  - git submodule update --remote
  - if [[ $TRAVIS_OS_NAME = 'osx' ]] ; then sudo tlmgr update --self; fi
  - if [[ $TRAVIS_OS_NAME = 'osx' ]] ; then sudo tlmgr install verbatimbox readarray ifnextok multirow fancyvrb url titlesec booktabs; fi 
  - if [[ $TRAVIS_OS_NAME != 'osx' ]] ; then tlmgr install verbatimbox readarray ifnextok; fi
  - if [[ $TRAVIS_OS_NAME = "osx" ]] ; then  brew install ccache; brew link ccache; fi
  - echo "CXX = $CXX" >> ./rstan/R_Makevars 
  - echo "CXX14 = $CXX" >> ./rstan/R_Makevars 
  - echo "CXX14FLAGS = `R CMD config CXXFLAGS` -pedantic -g0 -fPIC" >> ./rstan/R_Makevars 
  - export CLANG_EXTRA_ARG=""
  - if [[ $CXX =~ clang.* ]] ;  then export CLANG_EXTRA_ARG=" -Qunused-arguments -fcolor-diagnostics " ; fi
  - echo ${CXX} --version
  - echo ${CLANG_EXTRA_ARG}
  # - more ./rstan/R_Makevars
  - mkdir -p ~/.R/; cat ./rstan/R_Makevars > ~/.R/Makevars
  # - more ~/.R/Makevars
  - R CMD build StanHeaders/
  - R CMD INSTALL `find StanHeaders*.tar.gz`

#notifications:
#  email:
#    # recipients:
#      # - stan-buildbot@googlegroups.com
#    on_success: change
#    on_failure: always
#
#script:
#  - cd rstan 
#  - R -q -e "library(Rcpp); sessionInfo()"
#  - ../wait4.sh "make install" && cd tests && R -q -f runRunitTests.R

# sudo: true
# language: r
# warnings_are_errors: true
# 
# # Use Xenial whenever running in Linux (ignored for OS X)
# dist: xenial
# 
# # dont check for rgl used by dependencies here and there
# env: 
#   global: 
#     - RGL_USE_NULL=TRUE
#     - _R_CHECK_FORCE_SUGGESTS_=false
#     - MAKEFLAGS="-j 2"
# 
# # Construct the matrix of OS and R versions
# # this is a 2x2 matrix
# os:
#   - linux
#   - osx
# r:
#   - release
#   - devel
# 
# # Specify any additional packages that might be needed
# addons:
#   homebrew:
#     packages:
#     - llvm
# 
# before_install:
#   - |
#     if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
#       Rscript -e "install.packages(c('demogR','ungroup','MortalityLaws','Rdpack','rlang','dplyr','testthat','knitr','rmarkdown','DT','bibtex','MortalitySmooth','pbapply','Rcpp','rgl','RcppEigen','minpack.lm','RCurl','tidyr','gbRd','assertthat','glue','pkgconfig','tibble','tidyselect','BH','plogr','cli','ellipsis','evaluate','pkgload','praise','highr','markdown','stringr','xfun','htmltools','base64enc','tinytex','htmlwidgets','crosstalk','promises','svcm','shiny','manipulateWidget','ggplot2','miniUI','webshot','httpuv','xtable','sourcetools','later','fastmap','gtable','reshape2','scales','viridisLite','stringi','callr','processx','plyr','farver','labeling','munsell','RColorBrewer','lifecycle','fansi','pillar','colorspace','utf8','vctrs','ps','backports','zeallot','bitops','purrr','desc','pkgbuild','rprojroot','rstudioapi','prettyunits'), repos = 'https://cloud.r-project.org/', dependencies = TRUE)"
#       mkdir -p ~/.R
#       # Ensure that R will use clang from homebrew llvm (which includes openmp support)
#       echo "CC=$(brew --prefix llvm)/bin/clang" >> ~/.R/Makevars
#       echo "CXX=$(brew --prefix llvm)/bin/clang++" >> ~/.R/Makevars
#       echo "LDFLAGS=-L$(brew --prefix llvm)/lib" >> ~/.R/Makevars
#     fi
#   - |
#     if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
#       Rscript -e "install.packages(c('demogR','ungroup','MortalityLaws','Rdpack','rlang','dplyr','testthat','knitr','rmarkdown','DT','bibtex','MortalitySmooth','pbapply','Rcpp','rgl','RcppEigen','minpack.lm','RCurl','tidyr','gbRd','assertthat','glue','pkgconfig','tibble','tidyselect','BH','plogr','cli','ellipsis','evaluate','pkgload','praise','highr','markdown','stringr','xfun','htmltools','base64enc','tinytex','htmlwidgets','crosstalk','promises','svcm','shiny','manipulateWidget','ggplot2','miniUI','webshot','httpuv','xtable','sourcetools','later','fastmap','gtable','reshape2','scales','viridisLite','stringi','callr','processx','plyr','farver','labeling','munsell','RColorBrewer','lifecycle','fansi','pillar','colorspace','utf8','vctrs','ps','backports','zeallot','bitops','purrr','desc','pkgbuild','rprojroot','rstudioapi','prettyunits'), repos = 'https://cloud.r-project.org/', dependencies = TRUE)"
#       sudo apt-get install libfreetype6-dev 
#       sudo apt-get install libftgl-dev
#       sudo apt-get install mesa-common-dev 
#       sudo apt-get install libglu1-mesa-dev
#     fi
# 
# # Add R packages from CRAN. If newer versions are needed, r_github_packages
# # can be used instead
# r_packages:
#   - covr
# 
# after_success:
#   - Rscript -e 'covr::codecov()'
# 