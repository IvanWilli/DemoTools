# Author: sean
###############################################################################
#
#Males      <- c(18052, 16523, 15555, 12063, 9654, 9256, 10058, 10035, 9785, 9025,
#7562, 6241, 5362, 4256, 3168, 1956, 1056, 568)
#Females    <- c(17274, 15915, 14455, 11475, 9202, 9226, 10162, 10633, 9962, 9226,
#7966, 6739, 5458, 4575, 3355, 2156, 1121, 636)
#Age        <- seq(0, 90, by = 5)
#Date       <- 1950.25
#CohortSize <- 5


#' create the historical birth cohorts for a census
#' @description The birth cohorts for a census represent the population born during a set interval
#' of time. The date assigned to the time interval is the midpoint of the interval.
#' This is generalized from the PAS spreadsheet called GRPOP-YB.

#' @param Value   numeric. A vector of demographic counts.
#' @param Age   vector. An integer vector of ages corresponding to the lower integer bound of the counts.
#' @param Date  decimal. The exact date of the census.
#' @param ageMin  integer. The lowest age included in calcs. Default 0.
#' @param ageMax  integer. The upper age bound used for calcs. Default \code{max(Age)}.
#' @param cohortSize  integer. The length of time (years) surrounding each output birth cohort. Default 5.

#' @details Age groups must be of equal intervals. No specific age structure is assumed for the census. Births
#' are assumed to happen uniformly over the cohorts' intervals. The final age group is assumed to be the same
#' size as all the other age groups.

#' @return a data frame with a decimal date corresponding to the birth cohort and male and female populations
#' @export
#' 
#' @examples 
#' Males      <- c(18052, 16523, 15555, 12063, 9654, 9256, 10058, 10035, 9785, 9025,
#'                 7562, 6241, 5362, 4256, 3168, 1956, 1056, 568)
#' Females    <- c(17274, 15915, 14455, 11475, 9202, 9226, 10162, 10633, 9962, 9226,
#'                 7966, 6739, 5458, 4575, 3355, 2156, 1121, 636)
#' Age        <- seq(0, 90, by = 5)
#' Date       <- 1950.25
#' CohortSize <- 5
#' birthCohorts(Males, Age, Date)    # 3.9, matches pasex
#' birthCohorts(Females, Age, Date)  # 3.65 matches pasex
#' birthCohorts(Females, Age, Date, cohortSize = 10) # 1.8


birthCohorts <- function(Value, Age, Date, ageMin = 0, ageMax = max(Age), cohortSize = 5){
      stopifnot(length(Value) == length(Age))
      
      N   <- length(Value)          # number of age groups from the census.
      M   <- ageMax/N               # length of each age group from the census.
      
      ageGroupBirths   <- Value/M    # vector of the number of births in a single year for each age group assuming uniformity.
      
      singleAgeGroupBirths  <- rep(ageGroupBirths, each = M)  # vector of the single year births for all ages
      
      # Check that the cohort divides into the max age. If not, add some zeros to prevent errors when summing across the vector.
      if (ageMax %% cohortSize != 0){
                  singleAgeGroupBirths <- c(singleAgeGroupBirths, rep(0, each = cohortSize - ageMax%%cohortSize)
      }
      
      outputCohorts <- colSums(matrix(singleAgeGroupBirths, nrows = cohortSize))
      
      years <- seq(Date-ageMax+cohortSize/2, Date - cohortSize/2, by = cohortSize)
      
      outputDataFrame <- as.data.frame(cbind(years, outputCohorts))
      colnames(outputDataFrame) <- c("Year", "Births")
      
      return(outputDataFrame)
}
